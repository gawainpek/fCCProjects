** start of undefined **

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="All you need to know about the building responsive webpages from freeCodeCamp, up until this point.">
    <link rel="stylesheet" href="./styles.css">
    <title>HTML&CSS Basics Technical Documentation</title>
  </head>

  <body>
    <nav id="navbar">
      <header>
        <h1 id="page-title">HTML & CSS Revisions</h1>
      </header>
      <a href="#Introduction" class="nav-link">Introduction</a>
      <a href="#HTML_Boilerplate" class="nav-link">HTML Boilerplate</a>
      <a href="#Coding_Accessibility" class="nav-link">Coding Accessibility</a>
      <a href="#CSS_Flexbox" class="nav-link">CSS Flexbox</a>
      <a href="#@media_Property" class="nav-link">@media Property</a>
    </nav>

    <main id="main-doc">
      <section class="main-section" id="Introduction">
        <header>
          <h2>Introduction</h2>
        </header>
          <p>This technical document serves as a revision of four key concepts which I have learned up until this point on freeCodeCamp.</p>
          <p>They pertain to elements and properties related to basic HTML and CSS.</p>  
      </section>

      <section class="main-section" id="HTML_Boilerplate">
        <header>
          <h2>HTML Boilerplate</h2>
        </header>
          <p>The HTML boilerplate is usually entered into the <code>head</code> section of a HTML document.</p>
          <p>They typically consist of the following:</p>
          <code>
          <ul id="head-elements">
            <li>meta charset = utf-8</li>
            <li>meta name="viewport" width="device-width, initial-scale=1.0"</li>
            <li>meta name="description" content="description of website"</li>
            <li>link rel="stylesheet" href="styles.css"</li>
            <li>title</li>
         </ul>
         </code>
      </section>

      <section class="main-section" id="Coding_Accessibility">
        <header>
          <h2>Coding Accessibility</h2>
        </header>
          <p>The <code>aria-labelledby</code> attribute allows screen readers to figure out via a label what a non-content specific element (such as a section) is.</p>
          <p>You can also add text that can be read by screen readers only by assigning a <code>sr-only</code> class to the information, and then adding the following CSS properties to the class:</p>
          <p><pre class="sr-code"><code>position:absolute;
width:1px;
height:2px;
padding:0;
margin:-1;
overflow:hidden;
clip: rect(0,0,0,0);
white-space:nowrap;
border:0;</code></pre></p>
          </ul>
      </section>

      <section class="main-section" id="CSS_Flexbox">
        <header>
          <h2>CSS Flexbox</h2>
        </header>
          <p>CSS Flexbox is a Web3 layout model which makes it easier to design flexible layouts without the need for positioning or floating.</p>
          <p>It can be set by using the <code>display:flex;</code> property in CSS. There are two axis in a flexbox: a main and cross axis.</p>
      </section>

      <section class="main-section" id="@media_Property">
        <header>
          <h2>@media Property</h2>
        </header>
          <p>The <code>@media</code> at-rule, aka a media query, is used to conditionally apply CSS.</p>
          <p>It is useful to build responsive webpages by defining how elements behave depending on the width or height of a page.</p>
          <p>It can be used together with logical operators to set up multiple parameters.</p>
          <code>
            @media (min-width:796px) and (max-width:1000px){
              .class{
                width:100px
              }
            }
          </code>
      </section>
    </main>
  </body>
</html>

** end of undefined **

** start of undefined **

*{
  box-sizing:border-box;
}

body{
  font-family:Trebuchet MS;
}

nav{
  border-right:solid 3px grey;
  width:300px;
  margin:-10px;
  height:100%;
  white-space:nowrap;
  display:flex;
  flex-direction:column;
  text-align:left;
  font-size:18px;
}

h1,h2{
  color:black;
  font-size:24px;
}


a{
  text-decoration:none;
  color:#363636;
  margin:0;
  padding:0;
}

.nav-link{
  border-top:solid 2px grey;
  text-align:left;
  vertical-align:middle;
  padding:20px 100px 20px 20px;
}

.nav-link:last-of-type{
  border-bottom:solid 2px grey;
  padding-bottom:20px !important;
}

#page-title{
  padding:0px 100px 0px 20px;
}

#main-doc{
  position:absolute;
  padding-bottom:25px;
  margin-left: 325px;
}

p{
  color:#363636;
  margin-left:10px;
  font-size:18px;
}

code{
  font-size:18px;
  background-color:#add8e6;
}

#head-elements{
  background-color:#add8e6;
  width:500px;
  margin-left:10px;
  padding-left:20px;
}

.sr-code{
  margin-left:10px;
}

.main-section{
  margin:0 0 40px 0;
}

@media (min-width:480px) and (max-width:1440px){
  nav{
    position:fixed;
  }
}

** end of undefined **

